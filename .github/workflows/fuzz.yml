name: Fuzzing Pipeline
on:
  workflow_dispatch:

jobs:
  fuzz:
    outputs:

      has_crash: ${{ steps.pkg.outputs.has_crash }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sebasteuo/memfuzz-lab:latest
      options: --user 0
    steps:
      - uses: actions/checkout@v4

      - name: Install libpng + zlib dev packages

        run: |

          apt-get update -qq

          apt-get install -y --no-install-recommends libpng-dev zlib1g-dev

      - name: Build png_parser
        run: bash ./targets/png_parser/build.sh

      - name: Run AFL++ (30 s)
        env:

          AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES: "1"
        run: |
          AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1 \
          AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1 AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1 timeout 30s afl-fuzz \
            -i ./targets/png_parser/corpus \
            -o out -- ./targets/png_parser/build/pngparse @@ || true

      # empaqueta sólo si hay crashes
      - name: Debug list out\/default

        shell: bash

        run: |

          echo "Contenido de out/default antes del tar:";

          ls -lR out/default || true

      - name: Debug list out\/default

        shell: bash

        run: |

          echo "Contenido de out/default:";

          ls -lR out/default || true

      - name: Debug list out\/default

        shell: bash

        run: |

          echo "Contenido de out/default:";

          ls -lR out/default || true

      - name: Debug list out/default

        shell: bash

        run: |

          echo "Contenido de out/default antes del tar:"

          ls -lR out/default || true
      - name: Package crashes
        id: pkg
        shell: bash
        run: |
          if compgen -G 'out/default/crashes/id:*' > /dev/null; then
            tar -czf crashes-png_parser.tar.gz -C out/default crashes
            echo "has_crash=true" >> $GITHUB_OUTPUT
        echo "has_crash=true"
          else
            echo "has_crash=false" >> $GITHUB_OUTPUT
        echo "has_crash=false"
          fi

      - name: Upload crashes
        if: steps.pkg.outputs.has_crash == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: crashes-png_parser
          path: crashes-png_parser.tar.gz

  analyze:
    if: needs.fuzz.outputs.has_crash == 'true'
    needs: fuzz
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sebasteuo/memfuzz-lab:latest
      options: --user 0
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: crashes-png_parser
          path: .

      - name: Install gh CLI + llvm-symbolizer

        shell: bash

        run: |

          apt-get update -qq

          apt-get install -y --no-install-recommends gh llvm

      - name: Install libpng + zlib dev packages

        run: |

          apt-get update -qq

          apt-get install -y --no-install-recommends libpng-dev zlib1g-dev

      - name: Rebuild png_parser (symbols)
        run: bash ./targets/png_parser/build.sh

      - name: Symbolize & create Issue
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/symbolize_and_issue.sh
      # **** BLOQUE FIJO (de momento sólo eco) ****
