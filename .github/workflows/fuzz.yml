|| true

      - id: package
        name: Package crashes
        run: |
          if [ -d out/default/crashes ] && [ "\$(ls -A out/default/crashes)" ]; then
            tar -C out/default -czf crashes-\${{ matrix.target }}.tar.gz crashes
            echo "has_crashes=true" >> "\$GITHUB_OUTPUT"
          else
            echo "has_crashes=false" >> "\$GITHUB_OUTPUT"
          fi

      - name: Upload crashes
        if: steps.package.outputs.has_crashes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: crashes-\${{ matrix.target }}
          path: crashes-\${{ matrix.target }}.tar.gz

  analyze:
    needs: fuzz
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sebasteuo/memfuzz-lab:latest
      options: --user 0
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: 'crashes-*'
          path: '.'

      - name: Install GitHub CLI
        run: |
          apt-get update -qq
          apt-get install -y --no-install-recommends gh

      - name: Symbolize crashes
        shell: bash
        run: |
          shopt -s nullglob
          for tar in crashes-*.tar.gz; do
            [[ -e "\$tar" ]] || continue
            target=\${tar#crashes-}; target=\${target%.tar.gz}
            mkdir -p work && tar -xzf "\$tar" -C work
            BIN=\$(basename \$(ls ./targets/\$target/build))
            for f in work/crashes/id:*; do
              [[ -e "\$f" ]] || continue
              ASAN_SYMBOLIZER_PATH=\$(which llvm-symbolizer) \
              ASAN_OPTIONS=symbolize=1:detect_leaks=0 \
              ./targets/\$target/build/\$BIN "\$f" 2>&1 \
                | /usr/bin/asan_symbolize-18 \
                > "\$(basename "\$f").\$target.txt" || true
            done
          done

      - name: Debug â€“ List generated TXT files
        shell: bash
        run: |
          echo "=== TXT generados ==="
          ls -1 *.txt || true
          echo "====================="

      - name: Create GitHub Issues
        env:
          GH_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          shopt -s nullglob
          for r in *.txt; do
            title=\$(head -1 "\$r" | cut -c1-120)
            if ! gh issue list --state all --search "\$title" | grep -q "\$title"; then
              target=\${r##*.txt}; target=\${target##*.}
              gh issue create --title "Crash: \$title" \
                              --body "Target **\$target**\n\n\`\`\`\n\$(cat "\$r")\n\`\`\`"
            fi
          done
